# Generated by Django 5.1 on 2025-09-09 15:14

import core.db_utils
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('forms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('google_sheets', 'Google Sheets'), ('slack', 'Slack'), ('notion', 'Notion'), ('airtable', 'Airtable'), ('hubspot', 'HubSpot'), ('zapier', 'Zapier'), ('make', 'Make'), ('stripe', 'Stripe'), ('webhook', 'Custom Webhook')], max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error')], default='inactive', max_length=20)),
                ('config_encrypted', models.TextField()),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('access_token_encrypted', models.TextField(blank=True, null=True)),
                ('refresh_token_encrypted', models.TextField(blank=True, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='core.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationConnection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True)),
                ('trigger_events', core.db_utils.ArrayField(base_field=models.CharField(choices=[('form_submit', 'Form Submission'), ('partial_submit', 'Partial Submission')], max_length=50), default=list, help_text='Events that trigger this integration')),
                ('field_mapping', models.JSONField(default=dict, help_text='Maps form fields to integration fields')),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('last_triggered_at', models.DateTimeField(blank=True, null=True)),
                ('success_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integration_connections', to='forms.form')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='integrations.integration')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('trigger_event', models.CharField(max_length=50)),
                ('request_data', models.JSONField(default=dict)),
                ('response_data', models.JSONField(blank=True, null=True)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.integrationconnection')),
                ('partial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='integration_logs', to='core.partial')),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='integration_logs', to='core.submission')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='integration',
            index=models.Index(fields=['organization', 'type'], name='integration_organiz_211550_idx'),
        ),
        migrations.AddIndex(
            model_name='integration',
            index=models.Index(fields=['status'], name='integration_status_86f514_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='integration',
            unique_together={('organization', 'type', 'name')},
        ),
        migrations.AddIndex(
            model_name='integrationconnection',
            index=models.Index(fields=['form', 'enabled'], name='integration_form_id_5daa04_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationconnection',
            index=models.Index(fields=['integration', 'enabled'], name='integration_integra_c16eb6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='integrationconnection',
            unique_together={('form', 'integration')},
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['connection', 'status'], name='integration_connect_d59868_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['submission'], name='integration_submiss_dc1ad2_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['partial'], name='integration_partial_1df1e1_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['status', 'next_retry_at'], name='integration_status_3c5ae6_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['-created_at'], name='integration_created_131d44_idx'),
        ),
    ]
