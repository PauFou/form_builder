# Generated by Django 5.1 on 2025-09-12 09:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('forms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProcessingAgreement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=20)),
                ('template_content', models.TextField(help_text='DPA template content in markdown')),
                ('signed', models.BooleanField(default=False)),
                ('signed_date', models.DateTimeField(blank=True, null=True)),
                ('signatory_name', models.CharField(blank=True, max_length=255)),
                ('signatory_title', models.CharField(blank=True, max_length=255)),
                ('signatory_email', models.EmailField(blank=True, max_length=254)),
                ('signed_document_url', models.URLField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dpas', to='core.organization')),
            ],
            options={
                'verbose_name': 'Data Processing Agreement',
                'verbose_name_plural': 'Data Processing Agreements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataResidencyConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_region', models.CharField(choices=[('eu-west-1', 'EU West (Ireland)'), ('eu-central-1', 'EU Central (Frankfurt)'), ('eu-north-1', 'EU North (Stockholm)')], default='eu-west-1', max_length=20)),
                ('allowed_regions', models.JSONField(blank=True, help_text='List of allowed regions for data storage', null=True)),
                ('enforce_residency', models.BooleanField(default=True, help_text='Enforce data residency requirements')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data_residency', to='core.organization')),
            ],
            options={
                'verbose_name': 'Data Residency Configuration',
                'verbose_name_plural': 'Data Residency Configurations',
            },
        ),
        migrations.CreateModel(
            name='ConsentRecord',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('respondent_identifier', models.CharField(help_text='Email or other identifier', max_length=255)),
                ('consent_type', models.CharField(choices=[('data_collection', 'Data Collection'), ('marketing', 'Marketing Communications'), ('analytics', 'Analytics & Tracking'), ('third_party', 'Third Party Sharing'), ('cookies', 'Cookies & Tracking')], max_length=50)),
                ('granted', models.BooleanField()),
                ('consent_text', models.TextField(help_text='The exact consent text presented to the user')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('withdrawal_date', models.DateTimeField(blank=True, null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consent_records', to='forms.form')),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consent_records', to='core.submission')),
            ],
            options={
                'verbose_name': 'Consent Record',
                'indexes': [models.Index(fields=['respondent_identifier'], name='gdpr_consen_respond_9f22bd_idx'), models.Index(fields=['form', 'consent_type'], name='gdpr_consen_form_id_1ab139_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataDeletionRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requester_email', models.EmailField(max_length=254)),
                ('requester_name', models.CharField(max_length=255)),
                ('scope', models.CharField(choices=[('all', 'All Data'), ('form', 'Specific Form'), ('submission', 'Specific Submission')], max_length=20)),
                ('submission_ids', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('processing', 'Processing'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verification_token', models.CharField(max_length=255)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_report', models.JSONField(blank=True, help_text='Report of what was deleted', null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forms.form')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to='core.organization')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Deletion Request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='gdpr_datade_status_9d6097_idx'), models.Index(fields=['requester_email'], name='gdpr_datade_request_de2487_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataExportRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requester_email', models.EmailField(max_length=254)),
                ('include_submissions', models.BooleanField(default=True)),
                ('include_partial_submissions', models.BooleanField(default=True)),
                ('include_consent_records', models.BooleanField(default=True)),
                ('include_audit_logs', models.BooleanField(default=False)),
                ('export_format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('parquet', 'Parquet')], default='json', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('export_url', models.URLField(blank=True)),
                ('export_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_requests', to='core.organization')),
            ],
            options={
                'verbose_name': 'Data Export Request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='gdpr_dataex_status_34af15_idx'), models.Index(fields=['requester_email'], name='gdpr_dataex_request_d37ae7_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submission_retention_days', models.IntegerField(default=365, help_text='Days to retain form submissions')),
                ('partial_retention_days', models.IntegerField(default=30, help_text='Days to retain partial submissions')),
                ('attachment_retention_days', models.IntegerField(default=365, help_text='Days to retain file attachments')),
                ('audit_log_retention_days', models.IntegerField(default=730, help_text='Days to retain audit logs')),
                ('auto_delete_enabled', models.BooleanField(default=False, help_text='Enable automatic deletion after retention period')),
                ('deletion_notification_days', models.IntegerField(default=30, help_text='Days before deletion to notify data subjects')),
                ('form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retention_policies', to='forms.form')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retention_policies', to='core.organization')),
            ],
            options={
                'verbose_name': 'Data Retention Policy',
                'verbose_name_plural': 'Data Retention Policies',
                'unique_together': {('organization', 'form')},
            },
        ),
        migrations.CreateModel(
            name='PIIFieldConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_id', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('name', 'Name'), ('email', 'Email'), ('phone', 'Phone'), ('address', 'Address'), ('ssn', 'Social Security Number'), ('credit_card', 'Credit Card'), ('bank_account', 'Bank Account'), ('passport', 'Passport Number'), ('driver_license', 'Driver License'), ('health', 'Health Information'), ('biometric', 'Biometric Data'), ('other', 'Other PII')], max_length=50)),
                ('encrypt_at_rest', models.BooleanField(default=True)),
                ('mask_in_exports', models.BooleanField(default=True)),
                ('mask_in_ui', models.BooleanField(default=False)),
                ('require_consent', models.BooleanField(default=True)),
                ('masking_pattern', models.CharField(blank=True, help_text='Pattern for masking (e.g., ****-****-****-{last4})', max_length=100)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pii_configs', to='forms.form')),
            ],
            options={
                'verbose_name': 'PII Field Configuration',
                'unique_together': {('form', 'field_id')},
            },
        ),
    ]
