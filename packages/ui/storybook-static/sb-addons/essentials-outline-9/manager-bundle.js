try {
  (() => {
    var c = __REACT__,
      {
        Children: B,
        Component: P,
        Fragment: R,
        Profiler: D,
        PureComponent: w,
        StrictMode: L,
        Suspense: E,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: U,
        cloneElement: v,
        createContext: x,
        createElement: H,
        createFactory: M,
        createRef: F,
        forwardRef: N,
        isValidElement: G,
        lazy: W,
        memo: u,
        startTransition: K,
        unstable_act: Y,
        useCallback: d,
        useContext: V,
        useDebugValue: q,
        useDeferredValue: z,
        useEffect: p,
        useId: Z,
        useImperativeHandle: J,
        useInsertionEffect: Q,
        useLayoutEffect: X,
        useMemo: $,
        useReducer: j,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: to,
        version: co,
      } = __REACT__;
    var so = __STORYBOOK_API__,
      {
        ActiveTabs: io,
        Consumer: uo,
        ManagerContext: po,
        Provider: mo,
        RequestResponseError: So,
        addons: a,
        combineParameters: _o,
        controlOrMetaKey: Co,
        controlOrMetaSymbol: bo,
        eventMatchesShortcut: ho,
        eventToShortcut: Ao,
        experimental_MockUniversalStore: ko,
        experimental_UniversalStore: yo,
        experimental_requestResponse: To,
        experimental_useUniversalStore: go,
        isMacLike: Oo,
        isShortcutTaken: fo,
        keyToSymbol: Bo,
        merge: Po,
        mockChannel: Ro,
        optionOrAltSymbol: Do,
        shortcutMatchesShortcut: wo,
        shortcutToHumanString: Lo,
        types: m,
        useAddonState: Eo,
        useArgTypes: Uo,
        useArgs: vo,
        useChannel: xo,
        useGlobalTypes: Ho,
        useGlobals: S,
        useParameter: Mo,
        useSharedState: Fo,
        useStoryPrepared: No,
        useStorybookApi: _,
        useStorybookState: Go,
      } = __STORYBOOK_API__;
    var qo = __STORYBOOK_COMPONENTS__,
      {
        A: zo,
        ActionBar: Zo,
        AddonPanel: Jo,
        Badge: Qo,
        Bar: Xo,
        Blockquote: $o,
        Button: jo,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: te,
        DocumentWrapper: ce,
        EmptyTabContent: re,
        ErrorFormatter: Ie,
        FlexBar: le,
        Form: ae,
        H1: se,
        H2: ie,
        H3: ue,
        H4: de,
        H5: pe,
        H6: me,
        HR: Se,
        IconButton: C,
        IconButtonSkeleton: _e,
        Icons: Ce,
        Img: be,
        LI: he,
        Link: Ae,
        ListItem: ke,
        Loader: ye,
        Modal: Te,
        OL: ge,
        P: Oe,
        Placeholder: fe,
        Pre: Be,
        ProgressSpinner: Pe,
        ResetWrapper: Re,
        ScrollArea: De,
        Separator: we,
        Spaced: Le,
        Span: Ee,
        StorybookIcon: Ue,
        StorybookLogo: ve,
        Symbols: xe,
        SyntaxHighlighter: He,
        TT: Me,
        TabBar: Fe,
        TabButton: Ne,
        TabWrapper: Ge,
        Table: We,
        Tabs: Ke,
        TabsState: Ye,
        TooltipLinkList: Ve,
        TooltipMessage: qe,
        TooltipNote: ze,
        UL: Ze,
        WithTooltip: Je,
        WithTooltipPure: Qe,
        Zoom: Xe,
        codeCommon: $e,
        components: je,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: tn,
        nameSpaceClassNames: cn,
        resetComponents: rn,
        withReset: In,
      } = __STORYBOOK_COMPONENTS__;
    var dn = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: pn,
        AccessibilityIcon: mn,
        AccessibilityIgnoredIcon: Sn,
        AddIcon: _n,
        AdminIcon: Cn,
        AlertAltIcon: bn,
        AlertIcon: hn,
        AlignLeftIcon: An,
        AlignRightIcon: kn,
        AppleIcon: yn,
        ArrowBottomLeftIcon: Tn,
        ArrowBottomRightIcon: gn,
        ArrowDownIcon: On,
        ArrowLeftIcon: fn,
        ArrowRightIcon: Bn,
        ArrowSolidDownIcon: Pn,
        ArrowSolidLeftIcon: Rn,
        ArrowSolidRightIcon: Dn,
        ArrowSolidUpIcon: wn,
        ArrowTopLeftIcon: Ln,
        ArrowTopRightIcon: En,
        ArrowUpIcon: Un,
        AzureDevOpsIcon: vn,
        BackIcon: xn,
        BasketIcon: Hn,
        BatchAcceptIcon: Mn,
        BatchDenyIcon: Fn,
        BeakerIcon: Nn,
        BellIcon: Gn,
        BitbucketIcon: Wn,
        BoldIcon: Kn,
        BookIcon: Yn,
        BookmarkHollowIcon: Vn,
        BookmarkIcon: qn,
        BottomBarIcon: zn,
        BottomBarToggleIcon: Zn,
        BoxIcon: Jn,
        BranchIcon: Qn,
        BrowserIcon: Xn,
        ButtonIcon: $n,
        CPUIcon: jn,
        CalendarIcon: ot,
        CameraIcon: et,
        CameraStabilizeIcon: nt,
        CategoryIcon: tt,
        CertificateIcon: ct,
        ChangedIcon: rt,
        ChatIcon: It,
        CheckIcon: lt,
        ChevronDownIcon: at,
        ChevronLeftIcon: st,
        ChevronRightIcon: it,
        ChevronSmallDownIcon: ut,
        ChevronSmallLeftIcon: dt,
        ChevronSmallRightIcon: pt,
        ChevronSmallUpIcon: mt,
        ChevronUpIcon: St,
        ChromaticIcon: _t,
        ChromeIcon: Ct,
        CircleHollowIcon: bt,
        CircleIcon: ht,
        ClearIcon: At,
        CloseAltIcon: kt,
        CloseIcon: yt,
        CloudHollowIcon: Tt,
        CloudIcon: gt,
        CogIcon: Ot,
        CollapseIcon: ft,
        CommandIcon: Bt,
        CommentAddIcon: Pt,
        CommentIcon: Rt,
        CommentsIcon: Dt,
        CommitIcon: wt,
        CompassIcon: Lt,
        ComponentDrivenIcon: Et,
        ComponentIcon: Ut,
        ContrastIcon: vt,
        ContrastIgnoredIcon: xt,
        ControlsIcon: Ht,
        CopyIcon: Mt,
        CreditIcon: Ft,
        CrossIcon: Nt,
        DashboardIcon: Gt,
        DatabaseIcon: Wt,
        DeleteIcon: Kt,
        DiamondIcon: Yt,
        DirectionIcon: Vt,
        DiscordIcon: qt,
        DocChartIcon: zt,
        DocListIcon: Zt,
        DocumentIcon: Jt,
        DownloadIcon: Qt,
        DragIcon: Xt,
        EditIcon: $t,
        EllipsisIcon: jt,
        EmailIcon: oc,
        ExpandAltIcon: ec,
        ExpandIcon: nc,
        EyeCloseIcon: tc,
        EyeIcon: cc,
        FaceHappyIcon: rc,
        FaceNeutralIcon: Ic,
        FaceSadIcon: lc,
        FacebookIcon: ac,
        FailedIcon: sc,
        FastForwardIcon: ic,
        FigmaIcon: uc,
        FilterIcon: dc,
        FlagIcon: pc,
        FolderIcon: mc,
        FormIcon: Sc,
        GDriveIcon: _c,
        GithubIcon: Cc,
        GitlabIcon: bc,
        GlobeIcon: hc,
        GoogleIcon: Ac,
        GraphBarIcon: kc,
        GraphLineIcon: yc,
        GraphqlIcon: Tc,
        GridAltIcon: gc,
        GridIcon: Oc,
        GrowIcon: fc,
        HeartHollowIcon: Bc,
        HeartIcon: Pc,
        HomeIcon: Rc,
        HourglassIcon: Dc,
        InfoIcon: wc,
        ItalicIcon: Lc,
        JumpToIcon: Ec,
        KeyIcon: Uc,
        LightningIcon: vc,
        LightningOffIcon: xc,
        LinkBrokenIcon: Hc,
        LinkIcon: Mc,
        LinkedinIcon: Fc,
        LinuxIcon: Nc,
        ListOrderedIcon: Gc,
        ListUnorderedIcon: Wc,
        LocationIcon: Kc,
        LockIcon: Yc,
        MarkdownIcon: Vc,
        MarkupIcon: qc,
        MediumIcon: zc,
        MemoryIcon: Zc,
        MenuIcon: Jc,
        MergeIcon: Qc,
        MirrorIcon: Xc,
        MobileIcon: $c,
        MoonIcon: jc,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: b,
        PaintBrushIcon: nr,
        PaperClipIcon: tr,
        ParagraphIcon: cr,
        PassedIcon: rr,
        PhoneIcon: Ir,
        PhotoDragIcon: lr,
        PhotoIcon: ar,
        PhotoStabilizeIcon: sr,
        PinAltIcon: ir,
        PinIcon: ur,
        PlayAllHollowIcon: dr,
        PlayBackIcon: pr,
        PlayHollowIcon: mr,
        PlayIcon: Sr,
        PlayNextIcon: _r,
        PlusIcon: Cr,
        PointerDefaultIcon: br,
        PointerHandIcon: hr,
        PowerIcon: Ar,
        PrintIcon: kr,
        ProceedIcon: yr,
        ProfileIcon: Tr,
        PullRequestIcon: gr,
        QuestionIcon: Or,
        RSSIcon: fr,
        RedirectIcon: Br,
        ReduxIcon: Pr,
        RefreshIcon: Rr,
        ReplyIcon: Dr,
        RepoIcon: wr,
        RequestChangeIcon: Lr,
        RewindIcon: Er,
        RulerIcon: Ur,
        SaveIcon: vr,
        SearchIcon: xr,
        ShareAltIcon: Hr,
        ShareIcon: Mr,
        ShieldIcon: Fr,
        SideBySideIcon: Nr,
        SidebarAltIcon: Gr,
        SidebarAltToggleIcon: Wr,
        SidebarIcon: Kr,
        SidebarToggleIcon: Yr,
        SpeakerIcon: Vr,
        StackedIcon: qr,
        StarHollowIcon: zr,
        StarIcon: Zr,
        StatusFailIcon: Jr,
        StatusIcon: Qr,
        StatusPassIcon: Xr,
        StatusWarnIcon: $r,
        StickerIcon: jr,
        StopAltHollowIcon: oI,
        StopAltIcon: eI,
        StopIcon: nI,
        StorybookIcon: tI,
        StructureIcon: cI,
        SubtractIcon: rI,
        SunIcon: II,
        SupportIcon: lI,
        SweepIcon: aI,
        SwitchAltIcon: sI,
        SyncIcon: iI,
        TabletIcon: uI,
        ThumbsUpIcon: dI,
        TimeIcon: pI,
        TimerIcon: mI,
        TransferIcon: SI,
        TrashIcon: _I,
        TwitterIcon: CI,
        TypeIcon: bI,
        UbuntuIcon: hI,
        UndoIcon: AI,
        UnfoldIcon: kI,
        UnlockIcon: yI,
        UnpinIcon: TI,
        UploadIcon: gI,
        UserAddIcon: OI,
        UserAltIcon: fI,
        UserIcon: BI,
        UsersIcon: PI,
        VSCodeIcon: RI,
        VerifiedIcon: DI,
        VideoIcon: wI,
        WandIcon: LI,
        WatchIcon: EI,
        WindowsIcon: UI,
        WrenchIcon: vI,
        XIcon: xI,
        YoutubeIcon: HI,
        ZoomIcon: MI,
        ZoomOutIcon: FI,
        ZoomResetIcon: NI,
        iconList: GI,
      } = __STORYBOOK_ICONS__;
    var s = "storybook/outline",
      h = "outline",
      A = u(function () {
        let [t, r] = S(),
          i = _(),
          I = [!0, "true"].includes(t[h]),
          l = d(() => r({ [h]: !I }), [I]);
        return (
          p(() => {
            i.setAddonShortcut(s, {
              label: "Toggle Outline",
              defaultShortcut: ["alt", "O"],
              actionName: "outline",
              showInMenu: !1,
              action: l,
            });
          }, [l, i]),
          c.createElement(
            C,
            { key: "outline", active: I, title: "Apply outlines to the preview", onClick: l },
            c.createElement(b, null)
          )
        );
      });
    a.register(s, () => {
      a.add(s, {
        title: "Outline",
        type: m.TOOL,
        match: ({ viewMode: t, tabId: r }) => !!(t && t.match(/^(story|docs)$/)) && !r,
        render: () => c.createElement(A, null),
      });
    });
  })();
} catch (e) {
  console.error("[Storybook] One of your manager-entries failed: " + import.meta.url, e);
}
