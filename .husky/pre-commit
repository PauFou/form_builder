#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Pre-commit hook - Lance TOUS les tests avant chaque commit

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo ""
echo -e "${CYAN}🚀 VALIDATION PRE-COMMIT COMPLÈTE${NC}"
echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo "Exécution de TOUS les tests avant le commit..."
echo ""

# Vérifier si on veut skip les tests (pour urgence uniquement)
if [ "$SKIP_TESTS" == "true" ]; then
    echo -e "${YELLOW}⚠️  ATTENTION: Tests contournés avec SKIP_TESTS=true${NC}"
    echo "Utilisez uniquement en cas d'urgence!"
    sleep 2
    exit 0
fi

# Utiliser le script de test complet
if [ -f "scripts/test-complete.sh" ]; then
    echo -e "${BLUE}Exécution de la suite de tests complète...${NC}"
    echo "Cela peut prendre quelques minutes."
    echo ""
    
    # Exécuter la suite complète
    if bash scripts/test-complete.sh; then
        echo ""
        echo -e "${GREEN}✅ TOUS LES TESTS SONT PASSÉS!${NC}"
        echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        echo "Votre commit est accepté."
        exit 0
    else
        echo ""
        echo -e "${RED}❌ ÉCHEC DES TESTS!${NC}"
        echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        echo ""
        echo "Votre commit est rejeté car des tests ont échoué."
        echo ""
        echo "Options:"
        echo "1. Corrigez les tests qui échouent"
        echo "2. En cas d'urgence ABSOLUE: SKIP_TESTS=true git commit"
        echo ""
        exit 1
    fi
else
    # Fallback si le script n'existe pas
    echo -e "${YELLOW}Script test-complete.sh non trouvé, exécution des tests de base...${NC}"
    
    # Phase 1: Lint et format
    echo -e "${BLUE}Phase 1: Lint et format${NC}"
    pnpm lint-staged
    if [ $? -ne 0 ]; then
        echo -e "${RED}❌ Erreur de formatage${NC}"
        exit 1
    fi
    
    # Phase 2: ESLint complet
    echo -e "\n${BLUE}Phase 2: ESLint${NC}"
    pnpm lint
    if [ $? -ne 0 ]; then
        echo -e "${RED}❌ Erreurs ESLint${NC}"
        exit 1
    fi
    
    # Phase 3: TypeScript
    echo -e "\n${BLUE}Phase 3: TypeScript${NC}"
    pnpm typecheck
    if [ $? -ne 0 ]; then
        echo -e "${RED}❌ Erreurs TypeScript${NC}"
        exit 1
    fi
    
    # Phase 4: Tests unitaires
    echo -e "\n${BLUE}Phase 4: Tests unitaires${NC}"
    pnpm test:ci
    if [ $? -ne 0 ]; then
        echo -e "${RED}❌ Tests unitaires échoués${NC}"
        exit 1
    fi
    
    # Phase 5: Build
    echo -e "\n${BLUE}Phase 5: Build${NC}"
    pnpm build
    if [ $? -ne 0 ]; then
        echo -e "${RED}❌ Build échoué${NC}"
        exit 1
    fi
    
    echo ""
    echo -e "${GREEN}✅ Validation de base passée${NC}"
    exit 0
fi